syntax = "proto3";
package ETModel;

import "Common.proto";

message Actor_Test // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	string Info = 1;
	vector3 vec = 2;
}

message Actor_TestRequest // IActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	string request = 1;
}

message Actor_TestResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string response = 1;
}

message Actor_TransferRequest // IActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 MapIndex = 1;
}

message Actor_TransferResponse // IActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message C2G_EnterMap // IRequest
{
	int32 RpcId = 90;
}

message G2C_EnterMap // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 UnitId = 1;
	int32 Count  = 2;
}

message UnitInfo
{
	int64 UnitId   = 1;
	int64 PlayerId = 2;
	int32 Type     = 3;
	int32 X        = 4;
	int32 Z        = 5;
}

message Actor_CreateUnits // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
    repeated UnitInfo Units = 1;
}

message Frame_ClickMap // IFrameMessage
{
	int32 RpcId = 90;
	int64 Id = 94;
	int32 X = 1;
	int32 Z = 2;
}
message Frame_UnitMove // IFrameMessage
{
	int32 RpcId = 90;
	int64 Id = 94;
	ETModel.vector3 dir = 1;
	ETModel.vector3 pos = 2;
}
message Frame_UnitMoveStop // IFrameMessage
{
	int32 RpcId = 90;
	int64 Id = 94;
	ETModel.vector3 dir = 1;
	ETModel.vector3 pos = 2;
}
message Frame_UnitRotation // IFrameMessage
{
	int32 RpcId = 90;
	int64 Id = 94;
	ETModel.vector3 rot = 1; //角色朝向
	ETModel.vector3 pos = 2;
}

message Frame_UnitSkillCastItem 	// IFrameMessage
{
	int32 RpcId = 90;
	int64 Id = 94;
	int32 Index = 1;
}

message C2R_Ping // IRequest
{
	int32 RpcId = 90;
}

message R2C_Ping // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message G2C_Test // IMessage
{
}

// 道具信息
message ItemInformation
{
	int64 Id = 1;// 编号
	int32 ItemId = 2;// 道具编号
	string name = 3;// 名字
	float X = 4;// 坐标
	float Y = 5;// 坐标
	float Z = 6;// 坐标
}

message Actor_CreateItems // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	repeated ItemInformation Items = 1;// 道具
}

// 删除道具
message Actor_RemoveItems // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	repeated int64 Id = 1;// 编号
}

// 比赛信息
message Actor_MatchInformation // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 WeakScore = 1;// 弱势方积分
	int32 StrongScore = 2;// 强势方积分
}

// 吐积分
message Frame_SpitScore // IFrameMessage
{
	int32 RpcId = 90;
	int64 Id = 94;
	vector3 position = 1;
}

// 冲刺技能
message Frame_Sprint // IFrameMessage
{
	int32 RpcId = 90;
	int64 Id = 94;
}